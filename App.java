/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package battleship;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;

public class App {

    private TextPlayer player1;
    private TextPlayer player2;

    /**
     * Constructs a battleship program with two players
     */
    public App(TextPlayer player1, TextPlayer player2) {
        this.player1 = player1;
        this.player2 = player2;
    }

    /**
     * This generate the make placement phase for players during the battleship game
     */
    public void doPlacementPhase() throws IOException {
        player1.doPlacementPhase();
        System.out.print("\n");
        player2.doPlacementPhase();
        System.out.print("\n");
    }

    public static TextPlayer playerIdentification(String name, BufferedReader inputSource, PrintStream out, V2ShipFactory factory) throws IOException {
        String prompt = "Please select the player type for " + name + ":\n" +
                "1. People player\n" +
                "2. Computer player\n";
        out.println(prompt);
        out.flush();

        String choice = getValidChoice(inputSource);

        if (choice.equals("1")) {
            return createTextPlayer(name, inputSource, out, factory);
        } else {
            return createComputerPlayer(name, inputSource, out, factory);
        }
    }

    public static String getValidChoice(BufferedReader inputSource) throws IOException {
        while (true) {
            String choice = inputSource.readLine().toUpperCase();
            if (choice.equals("1") || choice.equals("2")) {
                return choice;
            } else {
                System.out.println("Invalid choice! Please make your choice again!");
            }
        }
    }

    public static TextPlayer createTextPlayer(String name, BufferedReader inputSource, PrintStream out, V2ShipFactory factory) {
        Board<Character> b = new BattleShipBoard<>(10, 20, 'X');
        return new TextPlayer(name, b, inputSource, out, factory);
    }

    public static ComputerPlayer createComputerPlayer(String name, BufferedReader inputSource, PrintStream out, V2ShipFactory factory) {
        Board<Character> b = new BattleShipBoard<>(10, 20, 'X');
        return new ComputerPlayer(name, b, inputSource, out, factory);
    }

    public static void main(String[] args) throws IOException {
        int PORT = 12349;
        ServerSocket serverSocket = new ServerSocket(PORT);
        Socket clientSocket1 = serverSocket.accept();
        Socket clientSocket2 = serverSocket.accept();
        V2ShipFactory factory = new V2ShipFactory();
        PrintStream printStream1 = new PrintStream(clientSocket1.getOutputStream());
        PrintStream printStream2 = new PrintStream(clientSocket2.getOutputStream());
        TextPlayer player1 = playerIdentification("A", new BufferedReader(new InputStreamReader(clientSocket1.getInputStream())), printStream1, factory);
        TextPlayer player2 = playerIdentification("B", new BufferedReader(new InputStreamReader(clientSocket2.getInputStream())), printStream2, factory);
        App app = new App(player1, player2);
        app.doPlacementPhase();
        app.doAttackingPhase(printStream1, printStream2);
    }

    public void doAttackingPhase(PrintStream printStream1, PrintStream printStream2) throws IOException {
        // name of two palyers
        String name1 = player1.getName();
        String name2 = player2.getName();
        // board of two players
        Board<Character> board1 = player1.getBoard();
        Board<Character> board2 = player2.getBoard();
        // display information of board of two players
        BoardTextView view1 = new BoardTextView(board1);
        BoardTextView view2 = new BoardTextView(board2);
        // winning prompt of two players
        String win1 = "Player " + name1 + " win!";
        String win2 = "Player " + name2 + " win!";
        while (true) { // take turns to attack
            player1.playOneTurn(board2, view2, name2);
            if (player2.checkLose()) {
                printStream1.println(win1);
                break;
            }
            player2.playOneTurn(board1, view1, name1);
            if (player1.checkLose()) {
                printStream2.println(win2);
                break;
            }
        }
    }

//    public void doAttackingPhase() throws IOException {
//        // name of two palyers
//        String name1 = player1.getName();
//        String name2 = player2.getName();
//        // board of two players
//        Board<Character> board1 = player1.getBoard();
//        Board<Character> board2 = player2.getBoard();
//        // display information of board of two players
//        BoardTextView view1 = new BoardTextView(board1);
//        BoardTextView view2 = new BoardTextView(board2);
//        // winning prompt of two players
//        String win1 = "Player " + name1 + " win!";
//        String win2 = "Player " + name2 + " win!";
//        while (true) { // take turns to attack
//            player1.playOneTurn(board2, view2, name2);
//            if (player2.checkLose()) {
//                System.out.println(win1);
//                break;
//            }
//            System.out.print("\n");
//            player2.playOneTurn(board1, view1, name1);
//            if (player1.checkLose()) {
//                System.out.println(win2);
//                break;
//            }
//            System.out.print("\n");
//        }
//    }
}
